name: Deploy to EC2

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Create ecosystem.config.js
        run: |
          echo "module.exports = { 
            apps: [
              { 
                name: 'backend',
                script: 'index.js',
                env: { 
                  PORT: 4000,
                  CORS_ORIGIN: '${{ secrets.CORS_ORIGIN }}',
                  ACCESS_JWT_SECRET: '${{ secrets.ACCESS_JWT_SECRET }}',
                  DATABASE_URL: '${{ secrets.DATABASE_URL }}'
                }
              }
            ]
          }" > server/ecosystem.config.js

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          command_timeout: "20m"
          script: |
            # Navigate to project directory
            cd /home/ec2-user/app/Xcel-B2B

            # Backup current env files
            cp server/.env server/.env.backup || true
            cp client/.env client/.env.backup || true
            cp server/ecosystem.config.js server/ecosystem.config.js.backup || true

            # Clear git cache and pull latest changes
            git fetch --all
            git reset --hard origin/main

            # Restore env files
            mv server/.env.backup server/.env
            mv client/.env.backup client/.env
            mv server/ecosystem.config.js.backup server/ecosystem.config.js

            # Stop current processes
            pm2 stop all || true

            # Clear npm cache and node_modules
            cd server
            rm -rf node_modules package-lock.json
            npm cache clean --force
            npm install
            npx prisma generate

            cd ../client
            rm -rf node_modules package-lock.json .next
            npm cache clean --force
            npm install
            npm run build

            # Start applications with PM2
            cd ..
            pm2 delete all || true
            pm2 start server/index.js --name backend
            cd client && pm2 start npm --name frontend -- start

            # Save PM2 configuration
            pm2 save

            # Clear nginx cache if using nginx
            sudo systemctl restart nginx || true
