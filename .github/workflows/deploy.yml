name: Deploy to EC2

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Create ecosystem config
        run: |
          echo "module.exports = {
            apps: [
              {
                name: 'backend',
                cwd: './server',
                script: 'npm',
                args: 'start',
                env: {
                  NODE_ENV: 'production',
                  PORT: 5000,
                  DATABASE_URL: '${{ secrets.DATABASE_URL }}',
                  ACCESS_JWT_SECRET: '${{ secrets.ACCESS_JWT_SECRET }}',
                  CORS_ORIGIN: '${{ secrets.CORS_ORIGIN }}'
                }
              },
              {
                name: 'frontend',
                cwd: './client',
                script: 'npm',
                args: 'start',
                env: {
                  NODE_ENV: 'production',
                  PORT: 3000,
                  NEXT_PUBLIC_API_URL: '${{ secrets.NEXT_PUBLIC_API_URL }}'
                }
              }
            ]
          }" > ecosystem.config.js

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Kill any existing processes
            pm2 delete all || true

            # Navigate to project directory
            cd /home/ec2-user/Xcel-B2B

            # Fetch latest changes
            git fetch --all
            git reset --hard origin/main

            # Copy ecosystem config
            cp /home/ec2-user/ecosystem.config.js .

            # Backend setup
            cd server
            npm ci
            npx prisma generate

            # Frontend setup
            cd ../client
            npm ci
            npm run build

            # Start applications using PM2
            cd ..
            pm2 start ecosystem.config.js
            pm2 save
