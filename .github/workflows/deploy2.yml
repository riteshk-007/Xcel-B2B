name: Deploy to EC2 (Instance 2)

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Create ecosystem.config.js
        run: |
          echo "module.exports = { 
            apps: [
              { 
                name: 'backend',
                script: 'index.js',
                instances: 2,
                exec_mode: 'cluster',
                wait_ready: true,
                listen_timeout: 10000,
                kill_timeout: 5000,
                env: { 
                  PORT: 4000,
                  CORS_ORIGIN: '${{ secrets.CORS_ORIGIN_2 }}',
                  ACCESS_JWT_SECRET: '${{ secrets.ACCESS_JWT_SECRET }}',
                  DATABASE_URL: '${{ secrets.DATABASE_URL_2 }}
                }
              }
            ]
          }" > server/ecosystem.config.js

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST_2 }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          command_timeout: "20m"
          script: |
            # Navigate to project directory
            cd /home/ec2-user/Xcel-B2B

            # Create temporary deployment directory
            DEPLOY_DIR="/home/ec2-user/Xcel-B2B-temp"
            rm -rf $DEPLOY_DIR
            mkdir -p $DEPLOY_DIR

            # Clone repository to temp directory
             cd $DEPLOY_DIR
            git clone https://github.com/riteshk-007/Xcel-B2B.git .
            git checkout main

            # Copy existing env files
            cp /home/ec2-user/Xcel-B2B/server/.env server/.env
            cp /home/ec2-user/Xcel-B2B/client/.env client/.env
            cp /home/ec2-user/Xcel-B2B/server/ecosystem.config.js server/ecosystem.config.js

            # Install dependencies and build
            cd server
            npm install
            npx prisma generate

            cd ../client
            npm install
            npm run build

            # Start new instances first
            cd $DEPLOY_DIR
            pm2 start server/ecosystem.config.js

            # Wait for new instances to be ready (adjust sleep time as needed)
            sleep 10

            # Smoothly reload old instances
            cd /home/ec2-user/Xcel-B2B
            pm2 reload all --update-env

            # Update the main directory
            rm -rf /home/ec2-user/Xcel-B2B/*
            cp -r $DEPLOY_DIR/* /home/ec2-user/Xcel-B2B/

            # Cleanup
            rm -rf $DEPLOY_DIR

            # Save PM2 configuration
            pm2 save

            # Optional: Gracefully reload Nginx
            sudo nginx -t && sudo systemctl reload nginx
